#!/bin/bash
sudo apt -y update
sudo apt  install -y docker.io
sudo chmod 660 /var/run/docker.sock
sudo usermod -a -G docker ubuntu
sudo newgrp docker
mkdir -p /home/ubuntu/jcasc
ssh-keyscan ${worker_ip} > /home/ubuntu/jcasc/known_hosts
my_public_ip=$(curl https://checkip.amazonaws.com)
echo "My IP is $my_public_ip"
echo "My login: ${j_login} my pass: ${j_pass}"
echo "${gh_pipeline_repo}"
echo "my w_key: ${w_key}"
cat <<EOF> /home/ubuntu/.ssh/id_rsa
${w_key}
EOF

sed 's/^/                   /' /home/ubuntu/.ssh/id_rsa > /home/ubuntu/.ssh/id_rsa2
sed '0,/                   /s// /' /home/ubuntu/.ssh/id_rsa2 > /home/ubuntu/.ssh/id_rsa3
w_key_format=$(</home/ubuntu/.ssh/id_rsa3)
echo "*********************************************************************************************"
echo "my w_key_format $w_key_formated"
rm /home/ubuntu/.ssh/id_rsa
rm /home/ubuntu/.ssh/id_rsa2
rm /home/ubuntu/.ssh/id_rsa3

cat <<EOF> /home/ubuntu/jcasc/plugins.txt
ant:1.13
antisamy-markup-formatter:2.7
authorize-project:1.4.0
build-timeout:1.21
cloudbees-folder:6.758.vfd75d09eea_a_1
configuration-as-code:1670.v564dc8b_982d0
credentials-binding:636.v55f1275c7b_27
pipeline-stage-view:2.24
ssh-slaves:1.834.v622da_57f702c
ssh-agent:295.v9ca_a_1c7cc3a_a_
timestamper:1.18
workflow-aggregator:590.v6a_d052e5a_a_b_5
git:4.11.4
github:1.35.0
instance-identity:142.v04572ca_5b_265
matrix-auth:3.1.5
pam-auth:1.10
job-dsl:1.87
locale:144.v1a_998824ddb_3
configuration-as-code-secret-ssm:1.0.1
cloudbees-folder:6.815.v0dd5a_cb_40e0e
EOF

cat <<EOF> /home/ubuntu/jcasc/casc.yaml
jenkins:
  numExecutors: 2
  mode: NORMAL
  scmCheckoutRetryCount: 5
  labelString: "master"
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: ${j_login}
          password: ${j_pass}
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "View/Read:authenticated"
        - "Job/Read:authenticated"
        - "Job/Build:authenticated"
        - "Job/Discover:authenticated"
        - "Job/Workspace:authenticated"
        - "Job/Cancel:authenticated"
        - "Run/Replay:authenticated"
        - "Run/Update:authenticated"
        - "Overall/Read:authenticated"
        - "Overall/Administer:${j_login}"
  globalNodeProperties:
  - envVars:
      env:
      - key: "PROD_IP"
        value: "${app_server_public_ip}"
      - key: "USER"
        value: "${w_user}"
      - key: "IMAGE"
        value: "${dh_repo}"
      - key: "APP_GIT_HUB_REPO"
        value: "${gh_app_repo}"

  remotingSecurity:
    enabled: true
  nodes:
  - permanent:
      labelString: "docker"
      launcher:
        ssh:
          credentialsId: "SSH-KEY"
          host: ${worker_ip}
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
      name: "worker"
      nodeDescription: "worker"
      remoteFS: "/home/ubuntu/jenkins/"
      retentionStrategy: "always"
credentials:
  system:
    domainCredentials:
      - credentials:
        - usernamePassword:
            scope: "GLOBAL"
            id: "dockerHub-user"
            description: "Docker Hub User Credentials"
            username: ${dh_login}
            password: ${dh_pass}
        - basicSSHUserPrivateKey:
            scope: GLOBAL
            id: "SSH-KEY"
            description: "SSH KEY"
            username: ${w_user}
            privateKeySource:
              directEntry:
                privateKey: |
                  $w_key_format
        - string:
            description: "GitHub-token"
            id: "GitHub-token"
            scope: GLOBAL
            secret: ${gh_token}
        - string:
            id: "jcasc-credential-from-parameter-store"
            scope: GLOBAL
            secret: ""
unclassified:
  locale:
    systemLocale: en_US
    ignoreAcceptLanguage: true
  location:
    url: http://$my_public_ip:8080
  gitHubPluginConfig:
    configs:
    - credentialsId: "GitHub-token"
    hookUrl: "http://$my_public_ip:8080/github-webhook/"
jobs:
  - script: >
      multibranchPipelineJob('configuration-as-code') {
          branchSources {
              git {
                  id = 'configuration-as-code'
                  remote('${gh_pipeline_repo}')
              }
          }
      }
EOF

cat <<EOF> /home/ubuntu/jcasc/Dockerfile
FROM jenkins/jenkins:2.387.3
ENV JAVA_OPTS -Djenkins.install.runSetupWizard=false
ENV CASC_JENKINS_CONFIG /var/jenkins_home/casc.yaml
COPY --chown=jenkins:jenkins plugins.txt /usr/share/jenkins/ref/plugins.txt
RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt
COPY casc.yaml /var/jenkins_home/casc.yaml
COPY known_hosts /var/jenkins_home/.ssh/known_hosts
EOF

cat /home/ubuntu/jcasc/Dockerfile
cd /home/ubuntu/jcasc
sudo docker build --rm=false -t jenkins:jcasc .
sudo docker run --name jenkins -p 8080:8080 -p 50000:50000 --env ${j_login} --env ${j_pass} jenkins:jcasc
